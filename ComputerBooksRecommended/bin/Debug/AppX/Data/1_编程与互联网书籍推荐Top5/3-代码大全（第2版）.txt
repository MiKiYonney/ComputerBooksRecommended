【推荐理由】：
	《代码大全(第2版)》中所论述的技术不仅填补了初级与高级编程实践之间的空白，而且也为程序员们提供了一个有关软件开发技术的信息来源。《代码大全(第2版)》对经验丰富的程序员、技术带头人、自学的程序员及没有太多编程经验的学生都是大有裨益的。可以说，只要您具有一定的编程基础，想成为一名优秀的程序员，阅读《代码大全(第2版)》都不会让您失望。

【作者简介】：
	史蒂夫·迈克康奈尔（Steve McConnell）被公认为软件开发社区中的首要作者和发言人之一。他是Construx Software公司的首席软件工程师。他所编著的图书包括曾被《软件开发》杂志授予优异产品震撼大奖的《代码大全》和《快速软件开发》，以及《软件项目生存指南》和《专业软件开发》等等。

【书籍介绍】：
	代码大全（第2版）是著名IT畅销书作者、《IEEE Software》杂志前 主编、具有20年编程与项目管理经验的SteveMcConnell十余年前的经典著 作的全新演绎：第2版做了全面的更新，增加了很多与时俱进的内容，包括对新语言、新的开发过程与方法论的讨论等等。这是一本百科全书式的软 件构建手册，涵盖了软件构建活动的方方面面，尤其强调提高软件质量的种种实践方法。 作者特别注重源代码的可读性，详细讨论了类和函数命名、变量命名、数据类型和控制结构、代码布局等编程的最基本要素，也讨论了防御式 编程、表驱动法、协同构建、开发者测试、性能优化等有效开发实践，这些都服务于软件的首要技术使命：管理复杂度。为了培养程序员编写高质 量代码的习惯，书中展示了大量高质量代码示例（以及用作对比的低质量代码），提高软件质量是降低开发成本的重要途径。除此之外，本书归纳 总结来自专家经验、业界研究以及学术成果，列举了大量软件开发领域的真实案例与统计数据，提高本书的说服力。 《代码大全（第2版）》中所论述的技术不仅填补了初级与高级编程实践之间的空白，而且也为程序员们提供了一个有关软件开发技术的信息来 源。本书对经验丰富的程序员、技术带头人、自学的程序员及没有太多编程经验的学生都是大有裨益的。可以说，只要您具有一定的编程基础，想 成为一名优秀的程序员，阅读本书都不会让您失望。
	第1章 欢迎进入软件构建的世界 
	第2章 用隐喻来更充分地理解软件开发 
	第3章 三思而后行：前期准备 
	第4章 关键的“构建”决策 
	第5章软件构建中的设计 
	第6章 可以工作的类 
	第7章 高质量的子程序 
	第8章 防御式编程 
	第9章 伪代码编程过程 
	第10章使用变量的一般事项 
	第11章 变量名的力量 
	第12章 基本数据类型 
	第13章 不常见的数据类型 
	第14章 组织直线型代码 
	第15章使用条件语句 
	第16章 控制循环 
	第17章 不常见的控制结构 
	第18章 表驱动法
	第19章 一般控制问题 
	第20章 软件质量概述
	第21章 协同构建 
	第22章 开发者测试 
	第23章 调试 
	第24章 重构 
	第25章 代码调整策略 
	第26章 代码调整技术 
	第27章程序规模对构建的影响 
	第28章 管理构建 
	第29章 集成 
	第30章 编程工具 
	第31章 布局与风格 
	第32章 自说明代码 
	第33章个人性格 
	第34章 软件工艺的话题 
	第35章 何处有更多信息 
　　 

【读书体会】：
	想要学习软件开发的都应该去读这本书。书里面有很多一般很难接触到的最佳实践的东西。很多时候，这些也就是新手和高手之间的区别。当你知道了很多这些东西之后，也就很难有人再去叫你菜鸟。 
　　我认为本书最值得去读的是中间那几章很详细的细节方面的描述，如变量命名之类。我也很讨厌死板的软件工程教条，但我不反对软件工程。其实，这些所谓的最佳实践都是软件工程的核心。这些知识不仅仅是新手需要知道的，即使是所谓高手也需要常常温故知新。 
　　或许本书最大的败笔就在于题目。不过，这个题目也确实很难去翻译。Code Complete，译者说是“代码完成”，也就是软件工程里面有关软件生命周期的一个重要阶段。如果你要去找所谓的代码，这本书不是你要的。但是，我觉得它会给你更多。