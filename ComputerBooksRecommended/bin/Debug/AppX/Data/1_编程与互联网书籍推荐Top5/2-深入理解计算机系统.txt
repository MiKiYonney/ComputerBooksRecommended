【推荐理由】：
	从程序员的视角，看计算机系统！
	本书适用于那些想要写出更快、更可靠程序的程序员。通过掌握程序是如何映射到系统上，以及程序是如何执行的，读者能够更好的理解程序的行为为什么是这样的，以及效率低下是如何造成的。粗略来看，计算机系统包括处理器和存储器硬件、编译器、操作系统和网络互连环境。而通过程序员的视角，读者可以清晰地明白学习计算机系统的内部工作原理会对他们今后作为计算机科学研究者和工程师的工作有进一步的帮助。它还有助于为进一步学习计算机体系结构、操作系统、编译器和网络互连做好准备。

【作者简介】：
	作者：（美国）布莱恩特（Randal E.Bryant） （美国）奥哈拉伦（David R.O'Hallaron） 译者：龚奕利 雷迎春
	Randal E. Bryant，1973年于密歇根大学（University of Michigan）获得学士学位，随即就读于麻省理工学院（Massachusetts Institute of Technology）的研究生院，并在1981年获计算机博士学位。他在加州理工学院（California Institute of Technology）做了三年助教，从1984年至今一直是卡内基梅隆大学（Carnegie Mellon）的教师。他现在是计算机科学的大学教授（university professor）和计算机科学学院的院长。他同时还受邀于电子和计算机工程系。
	David R.O'Hallaron，拥有弗吉尼亚大学计算机科学博士学位，现为Intel兹堡实验室主任，卡内基-梅隆大学计算机科学和电子与计算机工程副教授。他曾获得卡内基-梅隆大学计算机科学学院颁发的Herbert Simon杰出教学奖，并同Quake项目中其他成员一起获得了高性能计算领域中的最高国际奖项——Gordon Bell奖。

【书籍介绍】：
	本书的主要论题包括：数据表示、C程序的机器级表示、处理器结构，程序优化、存储器层次结构、链接、异常控制流、虚拟存储器和存储器管理、系统级I/O、网络编程和并发编程。书中所覆盖的内容主要是这些方面是如何影响应用和系统程序员的。例如，在讲述数据表示时，本书说明了用来表示数字的表示方法是有限的，它能够近似地表示整数和实数，但是这种表示方法是有限制的，程序员必须了解。在讲述高速缓存时，本书讨论了矩阵代码中的循环变量的顺序是如何影响程序的性能的。在讨论网络互连时，本书描述了并发服务器如何能有效地处理来自多个客户端的请求。
	本书共分十三章，分别介绍了信息的表示和处理、程序的机器级表示、处理器体系结构、存储器层次结构、静态和动态链接、虚拟存储器、系统级I/O、网络编程和并发编程等精彩内容。其目的是解释计算机系统的所有本质概念，并向读者展示这些概念是如何实际地影响应用程序的正确性、性能和实用性。与其他主要针对系统构造人员的系统类书籍不同，这本书是写给程序员的，是从程序员的角度来描述的。本书为软件和硬件之间搭起了一个桥梁，它给出了一种帮助读者分别从硬件和软件的角度去理解一个程序及其行为的途径，这也填补了国内计算机系统教学中的一个空白。本书的最大优点是帮助读者理解概念，让读者很清楚地在脑海中构造一个层次型的计算机系统，从最低层数据在内存中的表示（如我们一直陌生的浮点数表示），到流水线指令的构成，到虚拟存储器，到编译系统，到动态加载库，到最后的用户应用。

【读书体会】：
	
	《浪潮之巅》是一本信息技术行业的传记，吴军先生没有像过去的一些作者一样，用流水账的方式来记录企业发展的历程，也没有像口述历史学家一样以企业家为中心来单一论述企业家对企业的影响，而是以一种客观的视角来理性地分析了企业发展、生存、进步、失败的原因，有的时候，这本书更像是以一个亲历者的角度在描述一个一个鲜活的故事。吴先生没有在书中夹杂过多的个人评论，但是用翔实的数据和具体的案例为读者提供了理性思考的空间，并且，在看似独立的章节背后，吴先生阐述了IT行业发展的完整生态链，包括投资、教育、产业的相互交融，以及对未来行业发展的评述，这一点让人非常欣赏。美中不足的一点个人感受是，有一些章节的安排略显散乱，比如11章和13-16章的内容，尤其是11和15章，有很多内在关联可以写得更清楚一些。总的来说这是一部很值得推荐的行业传记，读过之后，有一种“坐听潮起潮落，静看花谢花开”的感觉，同时，受益良多。