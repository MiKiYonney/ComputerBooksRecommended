【推荐理由】：
	武林至尊，宝刀屠龙，号令天下，莫敢不从，倚天不出，谁与争锋？如果说“java核心技术卷1”是那屠龙刀，那么这本“java核心技术卷2”就是倚天剑；绝对是java兵器谱上的必选书籍。 如此高深的技术书我还能保持轻松愉悦的阅读心情，真的是少有，将复杂而庞大的知识体系却如此简单又详细、透彻的逐一梳理下来时，仍觉精神体验的愉快。

【作者简介】：
	Cay S. Horstmann
	圣何塞州立大学计算机科学系教授、Java的倡导者，经常在开发人员会议上发表演讲。他是<Scala for the Impatient>Addison-Wesley, 2012)的作者，并参与撰写了《Core JavaServerTM Faces,Third Edition》（Prentice Hall, 2010）。
	Gary Cornell
	经教授程序设计专业课程20余年，并撰写了多部专著。他是Apress的创始人之一。他撰写的程序设计专业书籍十分畅销，曾荣获Jolt大奖，并获得Visual Basic Magazine的读者最喜爱作品大奖。

【书籍介绍】：
	Java领域最有影响力和价值的著作之一，与《Java编程思想》齐名，10余年全球畅销不衰，广受好评。根据JavaSE7全面更新，全面、深入地讲解Java中所有高级特性和开发技巧，包含大量案例，实践性强。
	本书中的章节大部分是相互独立的。你可以研究自己最感兴趣的主题，并可以按照任意顺序阅读这些章节。
	第1章的主题是输入输出处理。在Java中，所有IO都是通过所谓“流”来处理的。流使你可以按照统一的方式来处理与各种数据源之间的通信，例如文件、网络连接或内存块。我们对各种读入器和写出器类进行了详细的讨论，它们使得对Unicode的处理变得很容易。我们还向你展示了：如何使用对象序列化机制从而使保存和加载对象变得容易而方便，及其背后的原理。最后，我们讨论了Java SE 7的正则表达式和NIO2类库，它们使某些通用操作变得非常便捷，例如读取文件中的所有行。
	第2章介绍XML，介绍怎样解析XML文件，怎样生成XML以及怎样使用XSL转换。在一个实用示例中，我们将展示怎样在XML中指定Swing窗体的布局。我们还讨论了XPath API，它使得“在XML的干草堆中寻找绣花针”变得更加容易。
	第3章介绍网络API。Java使复杂的网络编程工作变得很容易实现。我们将介绍怎样创建连接到服务器上，怎样实现你自己的服务器，以及怎样创建HTTP连接。
	第4章介绍数据库编程，重点讲解JDBC，即Java数据库连接API，这是用于将Java程序与关系数据库进行连接的API。我们将介绍怎样通过使用Jdbc API的核心子集，编写能够处理实际的数据库日常操作事务的实用程序。（如果要完整介绍JDBC API的功能，可能需要编写一本像本书一样厚的书才行。）最后我们简要介绍了层次数据库，探讨了一下JNDI（Java命名及目录接口）以及LDAP（轻量级目录访问协议）。
	第5章讨论了一个我们认为其重要性将会不断提升的特性—国际化。Java编程语言是少数几种一开始就被设计为可以处理Unicode的语言之一，不过Java平台的国际化支持则走得更加深远。因此，你可以对Java应用程序进行国际化，使得它们不仅可以跨平台，而且还可以跨越国界。例如，我们会展示怎样编写一个退休金计算器的Applet，对它可以根据本地浏览器的情况使用英语、德语或者汉语进行浏览。
	第6章涵盖了没有纳入卷Ⅰ的所有Swing知识，尤其是重要但很复杂的树型构件和表格构件。随后我们介绍了编辑面板的基本用法、“多文档”界面的Java实现、在多线程程序中用到的进度指示器，以及诸如闪屏和支持系统托盘这样的“桌面集成特性”。我们仍着重介绍在实际编程中可能遇到的最为有用的构件，因为对Swing类库进行百科全书般的介绍可能会占据好几卷书的篇幅，并且只有专门的分类学家才感兴趣。
	第7章介绍Java2D API,你可以用它来创建实际的图形和特殊效果。该章还介绍了抽象窗口操作工具包（AWT）一些高级特性，这部分内容看起来过于专业，不适合在卷I中介绍。虽然如此，这些技术还是应该成为每一个编程人员工具包的一部分。这些特性包括打印和用于剪切粘贴及拖放的API。
	第8章介绍了用于Java平台的构件API—JavaBean。你将会看到怎样编写自己的Bean，以及其他编程人员怎样在集成构建环境中对它们进行操作。最后我们展示怎样使用JavaBean的持久性，以某种与对象序列化不同的适用于长期存储的格式来存储自己的数据。
	第9章继续介绍Java安全模型。Java平台一开始就是基于安全而设计的，该章会带你深入内部，查看这种设计是怎样实现的。我们将展示怎样编写用于特殊应用的类加载器以及安全管理器。然后介绍允许使用消息、代码签名、授权以及认证和加密等重要特性的安全API。最后，我们用一个使用AES和RSA加密算法的示例进行了总结。
	第10章讨论了三种处理代码的技术。脚本机制和编译器API允许程序去调用使用诸如JavaScript或Groovy之类的脚本语言编写的代码，并且允许程序去编译Java代码。可以使用注解向Java程序中添加任意信息（有时称为元数据）。我们将展示注解处理器怎样在源码级别或者在类文件级别上收集这些注解，以及怎样运用这些注解来影响运行时的类行为。注解只有在工具的支持下才有用，因此，我们希望我们的讨论能够帮助你根据需要选择有用的注解处理工具。
	第11章介绍分布式对象。我们详细介绍了RMI（远程方法调用）。这个API可以让你运行分布在多台机器上的Java对象。
	第12章介绍本地方法，这个功能可以让你调用为微软WindowsAPI这样的特殊机制而编写的各种方法。很显然，这种特性具有争议性：使用本地方法，那么Java平台的跨平台特性将会随之消失。虽然如此，每个为特定平台编写Java应用程序的专业开发人员都需要了解这些技术。有时，当你与不支持Java平台的设备或服务进行交互时，为了你的目标平台，你可能需要求助于操作系统API。我们将通过展示如何从某个Java程序访问Windows注册表API来阐明这一点。

【读书体会】：
	本书的第一章告诉你Java是什么，能作什么，口吻相当专业，一点也不浮夸。
	从第三章开始，他给出相当多的实际的代码（而不是TIJ一样的玩具代码），来指导你进阶，你会看到Java能怎么用于实际的开发，作者很多地方的评论，相当有见解。 
	然后的几章面向对象的，我建议好好阅读，这是许多Java初学者的梦魇，但也是最关键的。当然，第一次阅读时，本书叫你跳过什么你最好跳过什么，比如“代理”和“反射”。 
	然后第七章我建议也好好看一下，虽然Java的图形界面桌面开发应用不多，但是这里面关键的是介绍了一下Java的事件模型，需要掌握。 
	看完了这七章，你就具备了继续自己学习Java的能力了，接下来你还该好好看一下异常那一章。OK，现在你就具备帮导师干活的基本能力了，其他的就按需自学吧，Java的东西太多了，你不可能一开始就学全的
	TIJ这本书讲的更多的是思想，包括Java语言为什么这样设计，所以玩具化的代码并不妨碍思想的传达。等你用Java一段时间之后，再好好去看。