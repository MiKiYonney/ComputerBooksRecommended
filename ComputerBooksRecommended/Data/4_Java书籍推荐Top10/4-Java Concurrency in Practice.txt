【推荐理由】：
	《Java并发编程实战》第16届Jolt大奖提名图书，JavaOne大会最畅销图书，了解Java并发编程必读佳作。线程是Java平台的基础组成部分之一。随着多核处理器逐渐成为主流，如何高效地使用并发已成为构建高性能应用程序的重要因素。Java SE 5和Java 6在并发程序开发方面取得了巨大的进步，在其Java虚拟机中能支持一些高性能的并且具有高可伸缩性的并发类，此外还支持一组新的并发基础构建模块。在《Java并发编程实战》中，这些新功能的编写者们不仅介绍了它们的工作原理和使用方式，还介绍了隐藏在这些功能背后的研究背景与设计模式。
	然而，在开发、测试以及调试多线程的程序时仍然存在巨大的困难。开发人员很容易编写出一些看似能正常工作，但在一些情况下仍然会失败的程序（包括在正式发布的产品中，以及在高负载环境中）。《Java并发编程实战》不仅讲解了并发的理论基础，还介绍了各种实际的开发技术，这些知识对于构建可靠的、可伸缩的以及可维护的并发应用程序来说非常有用。《Java并发编程实战》并不仅是简单地罗列出各种并发API以及机制，而是详细地介绍了许多设计原则、设计模式以及思维模式，这些内容使得开发人员更容易构建出正确的并且高性能的并发程序。
	《Java并发编程实战》主要内容包括：并发性与线程安全性的基本概念，构建以及组合各种线程安全类的技术，使用java.util.concurrent包中的各种井发构建基础模块，性能优化中的注意事项，如何测试并发程序，以及一些高级主题，包括原子变量，无阻塞算法及JAVA内存模。
	
【作者简介】：
	作者：盖茨（Brian Goetz） （美国）Tim Peierls （美国）Joshua Bloch 等 译者：童云兰 等
	本书作者都是Java Community Process JSR 166专家组（并发工具）的主要成员,并在其他很多JCP专家组里任职。Brian Goetz有20多年的软件咨询行业经验,并著有至少75篇关于Java开发的文章。
	Tim Peierls是“现代多处理器”的典范,他在BoxPop.biz、唱片艺术和戏剧表演方面也颇有研究。
	Joseph Bowbeer是一个Java ME专家,他对并发编程的兴趣始于Apollo计算机时代。David Holmes是《The Java Programming Language》一书的合著者,任职于Sun公司。
	Joshua Bloch是Google公司的首席Java架构师,《Effective Java》一书的作者,并参与著作了《Java Puzzlers》。
	Doug Lea是《Concurrent Programming》一书的作者,纽约州立大学 Oswego分校的计算机科学教授。
【书籍介绍】：
	第1章　简介

	第一部分　基础知识
	第2章　线程安全性
	第3章　对象的共享
	第4章　对象的组合
	第5章　基础构建模块

	第二部分　结构化并发应用程序
	第6章　任务执行
	第7章　取消与关闭
	第8章　线程池的使用
	第9章　图形用户界面应用程序

	第三部分　活跃性、性能与测试
	第10章　避免活跃性危险
	第11章　性能与可伸缩性
	第12章　并发程序的测试
	
	第四部分　高级主题
	第13章　显式锁
	第14章　构建自定义的同步工具
	第15章　原子变量与非阻塞同步机制
	第16章　Java内存模型
	
【读书体会】：
	先不谈本书的内容如何，光书名就足够吸引不少目光。“并发”这个词在Java世界里往往和“高级、核心”等字眼相联系起来，就冲着这两个字，都将勾起软件工程师们埋藏在心底那种对技术的探索欲和对高级API的驾驭感。程序员嘛，多少都有点职业病。其实Java对“并发”优化从未停止过，从5.0到7.0，几乎每个版本的新特性里，都会针对前一版本在“并发”上有所改进。这种改进包括提供更丰富的API接口、JVM底层性能优化等诸多方面。然而笔者认为，在Java“并发”史上最具有划时代意义的一个里程碑，就是java.util.concurrent包的出现，这个随着Java5.0版本一起发布的我们称之为“Java并发包”的新类库，在很大程度上让Java程序员编写多线程并发代码，变得像写传统的CRUD代码一样简单，让程序员从需要自己管理多线程的噩梦中解放出来。这组API的发布，也实现了Java在并发领域的逆袭。 本书就是围绕这些知识点展开。 老实说，这不是一本入门书。首先，能流畅的阅读本书，需要一定的门槛。包括基于对Java线程基础知识的了解，以及对并发包一些常用API的了解，这点我相信很多有一定工作年限的程序员，都具备了。
