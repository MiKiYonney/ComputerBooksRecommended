【推荐理由】：
	随着核心平台以及生态系统的不断创新，Java技术一直在快速向前发展。《Java程序员修炼之道》涵盖了Java 7的最新特性和Java开发的关键技术，对当前大量开源技术并存，多核处理器、并发以及海量数据给Java开发带来的挑战作出了精辟的分析，提供了实践前沿的深刻洞见，涉及依赖注入、现代并发、类与字节码、性能调优等底层概念的剖析。
今天，掌握JVM上的新语言对Java开发人员的意义非比寻常。因此深入探讨Java关键技术，还用较大篇幅全面讨论了JVM上的多语言开发和项目控制，包括Groovy、Scala和Clojure这些优秀的新语言。这些技术可以帮助Java开发人员构建下一代商业软件。Java开发人员若要修炼进阶，本书绝对不容错过！
	
【作者简介】：
	Benjamin J. Evans 是伦敦Java用户组发起人、Java社区过程执行委员会成员。他拥有多年Java开发经验，现在是一家面向金融业的Java技术公司的CEO。
	Martijn Verburg 是jClarity的CTO、伦敦Java用户组领导人。作为一名技术专家和众多初创企业的OSS导师，他拥有十多年的经验。Martijn经常应邀出席Java界的大型会议（JavaOne、Devoxx、OSCON、FOSDEM等）并发表演讲，人送雅号“开发魔头”，赞颂他敢于向行业现状挑战的精神。
【书籍介绍】：
	本书分为四部分，第一部分全面介绍Java 7 的新特性，第二部分探讨Java 关键编程知识和技术，第三部分讨论JVM 上的新语言和多语言编程，第四部分将平台和多语言编程知识付诸实践。从介绍Java 7 的新特性入手，本书涵盖了Java 开发中最重要的技术，比如依赖注入、测试驱动的开发和持续集成，探索了JVM 上的非Java 语言，并详细讲解了多语言项目， 特别是涉及Groovy、Scala 和Clojure 语言的项目。此外，书中含有大量代码示例，帮助读者从实践中理解Java 语言和平台。
	第一部分 用Java7做开发 
	第1章 初识Java7 
	第2章 新I/O 
	第3章 依赖注入
	第4章 现代并发 
	第5章 类文件与字节码 
	第6章 理解性能调优
	
	第三部分 JVM上的多语言编程 
	第7章 备选JVM语言
	第8章 Groovy：Java的动态伴侣
	第9章 Scala：简约而不简单
	第10章 Clojure：更安全地编程

	第四部分 多语种项目开发 
	第11章 测试驱动开发
	第12章 构建和持续集成
	第13章 快速Web开发
	第14章 保持优秀

【读书体会】：
	《程序员修炼之道》由一系列的独立的部分组成，涵盖的主题从个人责任、职业发展，直到用于使代码保持灵活、并且易于改编和复用的各种架构技术。利用许多富有娱乐性的奇闻轶事、有思想性的例子以及有趣的类比，全面阐释了软件开发的许多不同方面的最佳实践和重大陷阱。无论你是初学者，是有经验的程序员，还是软件项目经理，本书都适合你阅读。
	这本书更像是一本java的学习地图，涉及的点挺多，有JDK7的一些新特性 ，TDD，JVM内存回收以及JVM上运行的非JAVA语言的介绍（Groovy,Scala,Closure）等，但是讲的都不深入，偏入门级的。唯一觉得介绍的还比较好的是Scala和Closure的篇幅，但作为早已经了解过这些语言的人来说，就没有那么有吸引力了。而且这部分的介绍Programming 系列图书介绍的更好，如《Programming Scala》等。总而言之，不是Java初学者，不推荐看。